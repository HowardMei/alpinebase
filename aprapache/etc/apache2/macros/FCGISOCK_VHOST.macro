# Define vhost macros for reuse, the <Macro> is evaluated only at start up, and <If> are evaluated for each incoming request.
# Usage:
# 	<VirtualHost 192.168.0.2:443>
#		Use FCGISOCK_VHOST / localhost "/run/php7/example.com.sock" "/var/www/demo.com/wpbase" demo.com www.demo.com
#		Use SSL_CERT  www.demo.com
# 		... ...
#		UndefMacro FCGISOCK_VHOST
#		UndefMacro SSL_CERT
#   </VirtualHost> 

Include /etc/apache2/macros/FCGI_SOCK.macro

<Macro FCGISOCK_VHOST $endpoint $fcgihost $fcgisock $docroot $domain $servalias>
# Usage: Use FCGISOCK_VHOST $endpoint $fcgihost $fcgisock $docroot $domain $servalias
# Example: Use FCGISOCK_VHOST / localhost "/run/php7/example.com.sock" "/var/www/example.com/htdocs" example.com www.example.com
	ServerName $domain
	ServerAlias $servalias
	ErrorLog "/var/log/apache2/$servalias.errorlog"
	CustomLog "/var/log/apache2/$servalias.accesslog" combinedio env=!dontlog
	<IfModule proxy_fcgi_module>
		DocumentRoot $docroot
		Use FCGI_SOCK $fcgihost $fcgisock
		UndefMacro FCGI_SOCK
		<Directory $docroot>
			Options FollowSymLinks
			AllowOverride All
			# Warning: Apache 2.4 uses a new module called mod_authz_host for access control. 
			# Instead of the Order, Allow and Deny, Satisfy directives in Apache 2.2, it uses a new directive Require. 
			# Order allow,deny
			# Allow from all
			Require all granted
		</Directory>
		<Location $endpoint>
			# Warning: Apache 2.4 uses a new module called mod_authz_host for access control. 
			# Instead of the Order, Allow and Deny, Satisfy directives in Apache 2.2, it uses a new directive Require. 
			# Order allow,deny
			# Allow from all
			Require all granted
		</Location>
	</IfModule>
</Macro>
