#daemon 				off;
user 					www-data;
pid         			/var/run/nginx/nginx.pid;
# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;
# Configures default error logger via s6 fifo.
error_log   		/var/run/s6/nginx-error-log-fifo warn;
# The maximum number of connections for Nginx is calculated by: max_clients = worker_processes * worker_connections
worker_processes 		4;
worker_cpu_affinity 	auto;
# Maximum open file descriptors per process should be > worker_connections.
worker_rlimit_nofile 	51200;

# Includes files with directives to load dynamic modules.
#include /etc/nginx/modules/*.conf;

events {
    use epoll;
# The maximum number of simultaneous connections that can be opened by a worker process.
# When you need > 8000 * cpu_cores connections, you have to hire kernel expert to optimize your OS.
    worker_connections 	8000;
    multi_accept 		on;
}

http {
# Includes mapping of file name extensions to MIME types of responses and defines the default type.
	  include    		/etc/nginx/mime.types;
	  default_type 		application/octet-stream;
	  gzip 				on;
# Enable compression both for HTTP/1.0 and HTTP/1.1.
	  gzip_http_version 	1.1;
# Compression level (1-9). 5 is a perfect compromise between size and cpu usage, offering about 75% reduction for most ascii files (almost identical to level 9).
	  gzip_comp_level   5;
# Don't compress anything that's already small and unlikely to shrink much if at all (the default is 20 bytes, which is bad).
	  gzip_min_length   256;
# Compress data even for clients that are connecting to us via proxies, identified by the "Via" header (required for CloudFront).
	  gzip_proxied      any;

# Tell proxies to cache both the gzipped and regular version whenever the client's Accept-Encoding capabilities header varies, as defined in the RFC 2616.
	  gzip_vary         on;
# Compress all output labeled with one of the following MIME-types.
	  gzip_types
						application/atom+xml
						application/javascript
						application/json
						application/ld+json
						application/manifest+json
						application/rss+xml
						application/vnd.geo+json
						application/vnd.ms-fontobject
						application/x-font-ttf
						application/x-web-app-manifest+json
						application/xhtml+xml
						application/xml
						font/opentype
						image/bmp
						image/svg+xml
						image/x-icon
						text/cache-manifest
						text/css
						text/plain
						text/vcard
						text/vnd.rim.location.xloc
						text/vtt
						text/x-component
						text/x-cross-domain-policy;
						# text/html is always compressed by gzip module
					  
# Update charset_types to match updated mime.types.
		charset_types 
						text/css 
						text/plain 
						text/vnd.wap.wml 
						application/javascript 
						application/json 
						application/rss+xml 
						application/xml;
						# text/html is always included by charset module.
						
# How long to allow each connection to stay idle; longer values are better for SSL, but means that worker connections are tied up longer. (Default: 65)  
	  keepalive_timeout 45;
# Speed up file transfers by using sendfile() to copy directly between descriptors rather than using read()/write().
	  sendfile 			on;
# Tell Nginx to enable the Nagle buffering algorithm for TCP packets, which collates several smaller packets together into one larger packet, 
# thus saving bandwidth at the cost of a nearly imperceptible increase to latency. (removes TCP_NODELAY)
	  tcp_nodelay 		on;
# Tell Nginx not to send out partial frames; this increases throughput since TCP frames are filled up before being sent out. (adds TCP_CORK)
	  tcp_nopush 		on;
	  types_hash_max_size 	8192;

# To avoid the error of "could not build the server_names_hash" 
      server_names_hash_bucket_size 128;
      server_names_hash_max_size 1024;
# Specifies the maximum accepted body size of a client request, as indicated by the request header Content-Length.
	  client_max_body_size 		32M;
	  # client_body_temp_path 	/tmp/nginx/body 1 2;
	  
# Name servers used to resolve names of upstream servers into addresses. It's also needed when using tcpsocket and udpsocket in Lua modules.
      #resolver 		8.8.8.8 	8.8.4.4;

# Don't tell nginx version to clients.
      server_tokens 	off;

# Configures default access format and access logger via s6 fifo.
      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
      '$status $body_bytes_sent "$http_referer" '
      '"$http_user_agent" "$http_x_forwarded_for"';
	  access_log 		/var/run/s6/nginx-access-log-fifo main;
	  	  
# Include the enabled virtual host server configs.
      include /etc/nginx/sites-enabled/*;
}
